   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC3:
  20 0000 0D0A00   		.ascii	"\015\012\000"
  21 0003 00       		.align	2
  22              	.LC5:
  23 0004 4C3A00   		.ascii	"L:\000"
  24 0007 00       		.align	2
  25              	.LC8:
  26 0008 2558200A 		.ascii	"%X \012\000"
  26      00
  27 000d 000000   		.align	2
  28              	.LC11:
  29 0010 2C00     		.ascii	",\000"
  30 0012 0000     		.section	.text.main,"ax",%progbits
  31              		.align	2
  32              		.global	main
  33              		.code	16
  34              		.thumb_func
  36              	main:
  37              	.LFB0:
  38              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** #include "derivative.h" /* include peripheral declarations */
   2:../Sources/main.c **** #include "TFC\TFC.h"
   3:../Sources/main.c **** 
   4:../Sources/main.c **** int main(void)
   5:../Sources/main.c **** {
  39              		.loc 1 5 0
  40              		.cfi_startproc
  41 0000 90B5     		push	{r4, r7, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 12
  44              		.cfi_offset 4, -12
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 83B0     		sub	sp, sp, #12
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 24
  50 0004 00AF     		add	r7, sp, #0
  51              	.LCFI2:
  52              		.cfi_def_cfa_register 7
   6:../Sources/main.c **** 	uint32_t t,i=0; 
  53              		.loc 1 6 0
  54 0006 0023     		mov	r3, #0
  55 0008 3B60     		str	r3, [r7]
   7:../Sources/main.c **** 	TFC_Init();
  56              		.loc 1 7 0
  57 000a FFF7FEFF 		bl	TFC_Init
  58              	.L29:
   8:../Sources/main.c **** 	
   9:../Sources/main.c **** 	for(;;)
  10:../Sources/main.c **** 	{	   
  11:../Sources/main.c **** 		//TFC_Task must be called in your main loop.  This keeps certain processing happy (I.E. Serial po
  12:../Sources/main.c **** 			TFC_Task();
  59              		.loc 1 12 0
  60 000e FFF7FEFF 		bl	TFC_Task
  13:../Sources/main.c **** 
  14:../Sources/main.c **** 			//This Demo program will look at the middle 2 switch to select one of 4 demo modes.
  15:../Sources/main.c **** 			//Let's look at the middle 2 switches
  16:../Sources/main.c **** 			switch((TFC_GetDIP_Switch()>>1)&0x03)
  61              		.loc 1 16 0
  62 0012 FFF7FEFF 		bl	TFC_GetDIP_Switch
  63 0016 031C     		mov	r3, r0
  64 0018 5B08     		lsr	r3, r3, #1
  65 001a DBB2     		uxtb	r3, r3
  66 001c 1A1C     		mov	r2, r3
  67 001e 0323     		mov	r3, #3
  68 0020 1340     		and	r3, r2
  69 0022 022B     		cmp	r3, #2
  70 0024 00D1     		bne	.LCB30
  71 0026 79E0     		b	.L4	@long jump
  72              	.LCB30:
  73 0028 032B     		cmp	r3, #3
  74 002a 00D1     		bne	.LCB32
  75 002c 9CE0     		b	.L5	@long jump
  76              	.LCB32:
  77 002e 012B     		cmp	r3, #1
  78 0030 3ED0     		beq	.L3
  17:../Sources/main.c **** 			{
  18:../Sources/main.c **** 			default:
  19:../Sources/main.c **** 			case 0 :
  20:../Sources/main.c **** 				//Demo mode 0 just tests the switches and LED's
  21:../Sources/main.c **** 				if(TFC_PUSH_BUTTON_0_PRESSED)
  79              		.loc 1 21 0
  80 0032 8C4B     		ldr	r3, .L32
  81 0034 1A69     		ldr	r2, [r3, #16]
  82 0036 8023     		mov	r3, #128
  83 0038 9B01     		lsl	r3, r3, #6
  84 003a 1340     		and	r3, r2
  85 003c 04D0     		beq	.L6
  22:../Sources/main.c **** 					TFC_BAT_LED0_ON;
  86              		.loc 1 22 0
  87 003e 8A4B     		ldr	r3, .L32+4
  88 0040 8022     		mov	r2, #128
  89 0042 5200     		lsl	r2, r2, #1
  90 0044 5A60     		str	r2, [r3, #4]
  91 0046 03E0     		b	.L7
  92              	.L6:
  23:../Sources/main.c **** 				else
  24:../Sources/main.c **** 					TFC_BAT_LED0_OFF;
  93              		.loc 1 24 0
  94 0048 874B     		ldr	r3, .L32+4
  95 004a 8022     		mov	r2, #128
  96 004c 5200     		lsl	r2, r2, #1
  97 004e 9A60     		str	r2, [r3, #8]
  98              	.L7:
  25:../Sources/main.c **** 				
  26:../Sources/main.c **** 				if(TFC_PUSH_BUTTON_1_PRESSED)
  99              		.loc 1 26 0
 100 0050 844B     		ldr	r3, .L32
 101 0052 1A69     		ldr	r2, [r3, #16]
 102 0054 8023     		mov	r3, #128
 103 0056 9B02     		lsl	r3, r3, #10
 104 0058 1340     		and	r3, r2
 105 005a 04D0     		beq	.L8
  27:../Sources/main.c **** 					TFC_BAT_LED3_ON;
 106              		.loc 1 27 0
 107 005c 824B     		ldr	r3, .L32+4
 108 005e 8022     		mov	r2, #128
 109 0060 1201     		lsl	r2, r2, #4
 110 0062 5A60     		str	r2, [r3, #4]
 111 0064 03E0     		b	.L9
 112              	.L8:
  28:../Sources/main.c **** 				else
  29:../Sources/main.c **** 					TFC_BAT_LED3_OFF;
 113              		.loc 1 29 0
 114 0066 804B     		ldr	r3, .L32+4
 115 0068 8022     		mov	r2, #128
 116 006a 1201     		lsl	r2, r2, #4
 117 006c 9A60     		str	r2, [r3, #8]
 118              	.L9:
  30:../Sources/main.c **** 				
  31:../Sources/main.c **** 				
  32:../Sources/main.c **** 				if(TFC_GetDIP_Switch()&0x01)
 119              		.loc 1 32 0
 120 006e FFF7FEFF 		bl	TFC_GetDIP_Switch
 121 0072 031C     		mov	r3, r0
 122 0074 1A1C     		mov	r2, r3
 123 0076 0123     		mov	r3, #1
 124 0078 1340     		and	r3, r2
 125 007a 04D0     		beq	.L10
  33:../Sources/main.c **** 					TFC_BAT_LED1_ON;
 126              		.loc 1 33 0
 127 007c 7A4B     		ldr	r3, .L32+4
 128 007e 8022     		mov	r2, #128
 129 0080 9200     		lsl	r2, r2, #2
 130 0082 5A60     		str	r2, [r3, #4]
 131 0084 03E0     		b	.L11
 132              	.L10:
  34:../Sources/main.c **** 				else
  35:../Sources/main.c **** 					TFC_BAT_LED1_OFF;
 133              		.loc 1 35 0
 134 0086 784B     		ldr	r3, .L32+4
 135 0088 8022     		mov	r2, #128
 136 008a 9200     		lsl	r2, r2, #2
 137 008c 9A60     		str	r2, [r3, #8]
 138              	.L11:
  36:../Sources/main.c **** 				
  37:../Sources/main.c **** 				if(TFC_GetDIP_Switch()&0x08)
 139              		.loc 1 37 0
 140 008e FFF7FEFF 		bl	TFC_GetDIP_Switch
 141 0092 031C     		mov	r3, r0
 142 0094 1A1C     		mov	r2, r3
 143 0096 0823     		mov	r3, #8
 144 0098 1340     		and	r3, r2
 145 009a 04D0     		beq	.L12
  38:../Sources/main.c **** 					TFC_BAT_LED2_ON;
 146              		.loc 1 38 0
 147 009c 724B     		ldr	r3, .L32+4
 148 009e 8022     		mov	r2, #128
 149 00a0 D200     		lsl	r2, r2, #3
 150 00a2 5A60     		str	r2, [r3, #4]
  39:../Sources/main.c **** 				else
  40:../Sources/main.c **** 					TFC_BAT_LED2_OFF;
  41:../Sources/main.c **** 				
  42:../Sources/main.c **** 				break;
 151              		.loc 1 42 0
 152 00a4 DDE0     		b	.L14
 153              	.L12:
  40:../Sources/main.c **** 					TFC_BAT_LED2_OFF;
 154              		.loc 1 40 0
 155 00a6 704B     		ldr	r3, .L32+4
 156 00a8 8022     		mov	r2, #128
 157 00aa D200     		lsl	r2, r2, #3
 158 00ac 9A60     		str	r2, [r3, #8]
 159              		.loc 1 42 0
 160 00ae D8E0     		b	.L14
 161              	.L3:
  43:../Sources/main.c **** 					
  44:../Sources/main.c **** 			case 1:
  45:../Sources/main.c **** 				
  46:../Sources/main.c **** 				//Demo mode 1 will just move the servos with the on-board potentiometers
  47:../Sources/main.c **** 				if(TFC_Ticker[0]>=20)
 162              		.loc 1 47 0
 163 00b0 6E4B     		ldr	r3, .L32+8
 164 00b2 1B68     		ldr	r3, [r3]
 165 00b4 132B     		cmp	r3, #19
 166 00b6 12D9     		bls	.L15
  48:../Sources/main.c **** 				{
  49:../Sources/main.c **** 					TFC_Ticker[0] = 0; //reset the Ticker
 167              		.loc 1 49 0
 168 00b8 6C4B     		ldr	r3, .L32+8
 169 00ba 0022     		mov	r2, #0
 170 00bc 1A60     		str	r2, [r3]
  50:../Sources/main.c **** 					//Every 20 mSeconds, update the Servos
  51:../Sources/main.c **** 					TFC_SetServo(0,TFC_ReadPot(0));
 171              		.loc 1 51 0
 172 00be 0020     		mov	r0, #0
 173 00c0 FFF7FEFF 		bl	TFC_ReadPot
 174 00c4 031C     		add	r3, r0, #0
 175 00c6 0020     		mov	r0, #0
 176 00c8 191C     		add	r1, r3, #0
 177 00ca FFF7FEFF 		bl	TFC_SetServo
  52:../Sources/main.c **** 					TFC_SetServo(1,TFC_ReadPot(1));
 178              		.loc 1 52 0
 179 00ce 0120     		mov	r0, #1
 180 00d0 FFF7FEFF 		bl	TFC_ReadPot
 181 00d4 031C     		add	r3, r0, #0
 182 00d6 0120     		mov	r0, #1
 183 00d8 191C     		add	r1, r3, #0
 184 00da FFF7FEFF 		bl	TFC_SetServo
 185              	.L15:
  53:../Sources/main.c **** 				}
  54:../Sources/main.c **** 				//Let's put a pattern on the LEDs
  55:../Sources/main.c **** 				if(TFC_Ticker[1] >= 125)
 186              		.loc 1 55 0
 187 00de 634B     		ldr	r3, .L32+8
 188 00e0 5B68     		ldr	r3, [r3, #4]
 189 00e2 7C2B     		cmp	r3, #124
 190 00e4 0FD9     		bls	.L16
  56:../Sources/main.c **** 				{
  57:../Sources/main.c **** 					TFC_Ticker[1] = 0;
 191              		.loc 1 57 0
 192 00e6 614B     		ldr	r3, .L32+8
 193 00e8 0022     		mov	r2, #0
 194 00ea 5A60     		str	r2, [r3, #4]
  58:../Sources/main.c **** 					t++;
 195              		.loc 1 58 0
 196 00ec 7B68     		ldr	r3, [r7, #4]
 197 00ee 0133     		add	r3, r3, #1
 198 00f0 7B60     		str	r3, [r7, #4]
  59:../Sources/main.c **** 					if(t>4)
 199              		.loc 1 59 0
 200 00f2 7B68     		ldr	r3, [r7, #4]
 201 00f4 042B     		cmp	r3, #4
 202 00f6 01D9     		bls	.L17
  60:../Sources/main.c **** 					{
  61:../Sources/main.c **** 						t=0;
 203              		.loc 1 61 0
 204 00f8 0023     		mov	r3, #0
 205 00fa 7B60     		str	r3, [r7, #4]
 206              	.L17:
  62:../Sources/main.c **** 					}			
  63:../Sources/main.c **** 					TFC_SetBatteryLED_Level(t);
 207              		.loc 1 63 0
 208 00fc 7B68     		ldr	r3, [r7, #4]
 209 00fe DBB2     		uxtb	r3, r3
 210 0100 181C     		mov	r0, r3
 211 0102 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 212              	.L16:
  64:../Sources/main.c **** 				}
  65:../Sources/main.c **** 				
  66:../Sources/main.c **** 				TFC_SetMotorPWM(0,0); //Make sure motors are off
 213              		.loc 1 66 0
 214 0106 0022     		mov	r2, #0
 215 0108 0023     		mov	r3, #0
 216 010a 101C     		add	r0, r2, #0
 217 010c 191C     		add	r1, r3, #0
 218 010e FFF7FEFF 		bl	TFC_SetMotorPWM
  67:../Sources/main.c **** 				TFC_HBRIDGE_DISABLE;
 219              		.loc 1 67 0
 220 0112 574B     		ldr	r3, .L32+12
 221 0114 8022     		mov	r2, #128
 222 0116 9203     		lsl	r2, r2, #14
 223 0118 9A60     		str	r2, [r3, #8]
  68:../Sources/main.c **** 			
  69:../Sources/main.c **** 
  70:../Sources/main.c **** 				break;
 224              		.loc 1 70 0
 225 011a A2E0     		b	.L14
 226              	.L4:
  71:../Sources/main.c **** 				
  72:../Sources/main.c **** 			case 2 :
  73:../Sources/main.c **** 				
  74:../Sources/main.c **** 				//Demo Mode 2 will use the Pots to make the motors move
  75:../Sources/main.c **** 				TFC_HBRIDGE_ENABLE;
 227              		.loc 1 75 0
 228 011c 544B     		ldr	r3, .L32+12
 229 011e 8022     		mov	r2, #128
 230 0120 9203     		lsl	r2, r2, #14
 231 0122 5A60     		str	r2, [r3, #4]
  76:../Sources/main.c **** 				TFC_SetMotorPWM(TFC_ReadPot(0),TFC_ReadPot(1));
 232              		.loc 1 76 0
 233 0124 0020     		mov	r0, #0
 234 0126 FFF7FEFF 		bl	TFC_ReadPot
 235 012a 041C     		add	r4, r0, #0
 236 012c 0120     		mov	r0, #1
 237 012e FFF7FEFF 		bl	TFC_ReadPot
 238 0132 031C     		add	r3, r0, #0
 239 0134 201C     		add	r0, r4, #0
 240 0136 191C     		add	r1, r3, #0
 241 0138 FFF7FEFF 		bl	TFC_SetMotorPWM
  77:../Sources/main.c **** 						
  78:../Sources/main.c **** 				//Let's put a pattern on the LEDs
  79:../Sources/main.c **** 				if(TFC_Ticker[1] >= 125)
 242              		.loc 1 79 0
 243 013c 4B4B     		ldr	r3, .L32+8
 244 013e 5B68     		ldr	r3, [r3, #4]
 245 0140 7C2B     		cmp	r3, #124
 246 0142 00D8     		bhi	.LCB194
 247 0144 8AE0     		b	.L30	@long jump
 248              	.LCB194:
  80:../Sources/main.c **** 					{
  81:../Sources/main.c **** 						TFC_Ticker[1] = 0;
 249              		.loc 1 81 0
 250 0146 494B     		ldr	r3, .L32+8
 251 0148 0022     		mov	r2, #0
 252 014a 5A60     		str	r2, [r3, #4]
  82:../Sources/main.c **** 							t++;
 253              		.loc 1 82 0
 254 014c 7B68     		ldr	r3, [r7, #4]
 255 014e 0133     		add	r3, r3, #1
 256 0150 7B60     		str	r3, [r7, #4]
  83:../Sources/main.c **** 							if(t>4)
 257              		.loc 1 83 0
 258 0152 7B68     		ldr	r3, [r7, #4]
 259 0154 042B     		cmp	r3, #4
 260 0156 01D9     		bls	.L19
  84:../Sources/main.c **** 							{
  85:../Sources/main.c **** 								t=0;
 261              		.loc 1 85 0
 262 0158 0023     		mov	r3, #0
 263 015a 7B60     		str	r3, [r7, #4]
 264              	.L19:
  86:../Sources/main.c **** 							}			
  87:../Sources/main.c **** 						TFC_SetBatteryLED_Level(t);
 265              		.loc 1 87 0
 266 015c 7B68     		ldr	r3, [r7, #4]
 267 015e DBB2     		uxtb	r3, r3
 268 0160 181C     		mov	r0, r3
 269 0162 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
  88:../Sources/main.c **** 					}
  89:../Sources/main.c **** 				break;
 270              		.loc 1 89 0
 271 0166 79E0     		b	.L30
 272              	.L5:
  90:../Sources/main.c **** 			
  91:../Sources/main.c **** 			case 3 :
  92:../Sources/main.c **** 			
  93:../Sources/main.c **** 				//Demo Mode 3 will be in Freescale Garage Mode.  It will beam data from the Camera to the 
  94:../Sources/main.c **** 				//Labview Application
  95:../Sources/main.c **** 				
  96:../Sources/main.c **** 		
  97:../Sources/main.c **** 				if(TFC_Ticker[0]>100 && LineScanImageReady==1)
 273              		.loc 1 97 0
 274 0168 404B     		ldr	r3, .L32+8
 275 016a 1B68     		ldr	r3, [r3]
 276 016c 642B     		cmp	r3, #100
 277 016e 00D8     		bhi	.LCB219
 278 0170 76E0     		b	.L31	@long jump
 279              	.LCB219:
 280              		.loc 1 97 0 is_stmt 0
 281 0172 404B     		ldr	r3, .L32+16
 282 0174 1B78     		ldrb	r3, [r3]
 283 0176 DBB2     		uxtb	r3, r3
 284 0178 012B     		cmp	r3, #1
 285 017a 00D0     		beq	.LCB224
 286 017c 70E0     		b	.L31	@long jump
 287              	.LCB224:
  98:../Sources/main.c **** 					{
  99:../Sources/main.c **** 					 TFC_Ticker[0] = 0;
 288              		.loc 1 99 0 is_stmt 1
 289 017e 3B4B     		ldr	r3, .L32+8
 290 0180 0022     		mov	r2, #0
 291 0182 1A60     		str	r2, [r3]
 100:../Sources/main.c **** 					 LineScanImageReady=0;
 292              		.loc 1 100 0
 293 0184 3B4B     		ldr	r3, .L32+16
 294 0186 0022     		mov	r2, #0
 295 0188 1A70     		strb	r2, [r3]
 101:../Sources/main.c **** 					 TERMINAL_PRINTF("\r\n");
 296              		.loc 1 101 0
 297 018a 3B4A     		ldr	r2, .L32+20
 298 018c 3B4B     		ldr	r3, .L32+24
 299 018e 101C     		mov	r0, r2
 300 0190 191C     		mov	r1, r3
 301 0192 FFF7FEFF 		bl	Qprintf
 102:../Sources/main.c **** 					 TERMINAL_PRINTF("L:");
 302              		.loc 1 102 0
 303 0196 384A     		ldr	r2, .L32+20
 304 0198 394B     		ldr	r3, .L32+28
 305 019a 101C     		mov	r0, r2
 306 019c 191C     		mov	r1, r3
 307 019e FFF7FEFF 		bl	Qprintf
 103:../Sources/main.c **** 					 
 104:../Sources/main.c **** 					 	if(t==0)
 308              		.loc 1 104 0
 309 01a2 7B68     		ldr	r3, [r7, #4]
 310 01a4 002B     		cmp	r3, #0
 311 01a6 02D1     		bne	.L21
 105:../Sources/main.c **** 					 		t=3;
 312              		.loc 1 105 0
 313 01a8 0323     		mov	r3, #3
 314 01aa 7B60     		str	r3, [r7, #4]
 315 01ac 02E0     		b	.L22
 316              	.L21:
 106:../Sources/main.c **** 					 	else
 107:../Sources/main.c **** 					 		t--;
 317              		.loc 1 107 0
 318 01ae 7B68     		ldr	r3, [r7, #4]
 319 01b0 013B     		sub	r3, r3, #1
 320 01b2 7B60     		str	r3, [r7, #4]
 321              	.L22:
 108:../Sources/main.c **** 					 	
 109:../Sources/main.c **** 						 TFC_SetBatteryLED_Level(t);
 322              		.loc 1 109 0
 323 01b4 7B68     		ldr	r3, [r7, #4]
 324 01b6 DBB2     		uxtb	r3, r3
 325 01b8 181C     		mov	r0, r3
 326 01ba FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 110:../Sources/main.c **** 						
 111:../Sources/main.c **** 						 for(i=0;i<128;i++)
 327              		.loc 1 111 0
 328 01be 0023     		mov	r3, #0
 329 01c0 3B60     		str	r3, [r7]
 330 01c2 10E0     		b	.L23
 331              	.L24:
 112:../Sources/main.c **** 						 {
 113:../Sources/main.c **** 								 TERMINAL_PRINTF("%X \n",LineScanImage0[i]);
 332              		.loc 1 113 0
 333 01c4 2F4B     		ldr	r3, .L32+32
 334 01c6 1A68     		ldr	r2, [r3]
 335 01c8 3B68     		ldr	r3, [r7]
 336 01ca 5B00     		lsl	r3, r3, #1
 337 01cc D318     		add	r3, r2, r3
 338 01ce 1B88     		ldrh	r3, [r3]
 339 01d0 9BB2     		uxth	r3, r3
 340 01d2 2949     		ldr	r1, .L32+20
 341 01d4 2C4A     		ldr	r2, .L32+36
 342 01d6 081C     		mov	r0, r1
 343 01d8 111C     		mov	r1, r2
 344 01da 1A1C     		mov	r2, r3
 345 01dc FFF7FEFF 		bl	Qprintf
 111:../Sources/main.c **** 						 for(i=0;i<128;i++)
 346              		.loc 1 111 0
 347 01e0 3B68     		ldr	r3, [r7]
 348 01e2 0133     		add	r3, r3, #1
 349 01e4 3B60     		str	r3, [r7]
 350              	.L23:
 111:../Sources/main.c **** 						 for(i=0;i<128;i++)
 351              		.loc 1 111 0 is_stmt 0
 352 01e6 3B68     		ldr	r3, [r7]
 353 01e8 7F2B     		cmp	r3, #127
 354 01ea EBD9     		bls	.L24
 114:../Sources/main.c **** 						 }
 115:../Sources/main.c **** 						//TERMINAL_PRINTF("\r\nCurrent:\r\n");
 116:../Sources/main.c **** 						 for(i=0;i<128;i++)
 355              		.loc 1 116 0 is_stmt 1
 356 01ec 0023     		mov	r3, #0
 357 01ee 3B60     		str	r3, [r7]
 358 01f0 30E0     		b	.L25
 359              	.L28:
 117:../Sources/main.c **** 						 {
 118:../Sources/main.c **** 								 TERMINAL_PRINTF("%X \n",LineScanImage1[i]);
 360              		.loc 1 118 0
 361 01f2 264B     		ldr	r3, .L32+40
 362 01f4 1A68     		ldr	r2, [r3]
 363 01f6 3B68     		ldr	r3, [r7]
 364 01f8 5B00     		lsl	r3, r3, #1
 365 01fa D318     		add	r3, r2, r3
 366 01fc 1B88     		ldrh	r3, [r3]
 367 01fe 9BB2     		uxth	r3, r3
 368 0200 1D49     		ldr	r1, .L32+20
 369 0202 214A     		ldr	r2, .L32+36
 370 0204 081C     		mov	r0, r1
 371 0206 111C     		mov	r1, r2
 372 0208 1A1C     		mov	r2, r3
 373 020a FFF7FEFF 		bl	Qprintf
 119:../Sources/main.c **** 								 if(i==127)
 374              		.loc 1 119 0
 375 020e 3B68     		ldr	r3, [r7]
 376 0210 7F2B     		cmp	r3, #127
 377 0212 0ED1     		bne	.L26
 120:../Sources/main.c **** 									 TERMINAL_PRINTF("\r\n",LineScanImage1[i]);
 378              		.loc 1 120 0
 379 0214 1D4B     		ldr	r3, .L32+40
 380 0216 1A68     		ldr	r2, [r3]
 381 0218 3B68     		ldr	r3, [r7]
 382 021a 5B00     		lsl	r3, r3, #1
 383 021c D318     		add	r3, r2, r3
 384 021e 1B88     		ldrh	r3, [r3]
 385 0220 9BB2     		uxth	r3, r3
 386 0222 1549     		ldr	r1, .L32+20
 387 0224 154A     		ldr	r2, .L32+24
 388 0226 081C     		mov	r0, r1
 389 0228 111C     		mov	r1, r2
 390 022a 1A1C     		mov	r2, r3
 391 022c FFF7FEFF 		bl	Qprintf
 392 0230 0DE0     		b	.L27
 393              	.L26:
 121:../Sources/main.c **** 								 else
 122:../Sources/main.c **** 									 TERMINAL_PRINTF(",",LineScanImage1[i]);
 394              		.loc 1 122 0
 395 0232 164B     		ldr	r3, .L32+40
 396 0234 1A68     		ldr	r2, [r3]
 397 0236 3B68     		ldr	r3, [r7]
 398 0238 5B00     		lsl	r3, r3, #1
 399 023a D318     		add	r3, r2, r3
 400 023c 1B88     		ldrh	r3, [r3]
 401 023e 9BB2     		uxth	r3, r3
 402 0240 0D49     		ldr	r1, .L32+20
 403 0242 134A     		ldr	r2, .L32+44
 404 0244 081C     		mov	r0, r1
 405 0246 111C     		mov	r1, r2
 406 0248 1A1C     		mov	r2, r3
 407 024a FFF7FEFF 		bl	Qprintf
 408              	.L27:
 116:../Sources/main.c **** 						 for(i=0;i<128;i++)
 409              		.loc 1 116 0
 410 024e 3B68     		ldr	r3, [r7]
 411 0250 0133     		add	r3, r3, #1
 412 0252 3B60     		str	r3, [r7]
 413              	.L25:
 116:../Sources/main.c **** 						 for(i=0;i<128;i++)
 414              		.loc 1 116 0 is_stmt 0
 415 0254 3B68     		ldr	r3, [r7]
 416 0256 7F2B     		cmp	r3, #127
 417 0258 CBD9     		bls	.L28
 123:../Sources/main.c **** 						}										
 124:../Sources/main.c **** 							
 125:../Sources/main.c **** 					}
 126:../Sources/main.c **** 					
 127:../Sources/main.c **** 
 128:../Sources/main.c **** 
 129:../Sources/main.c **** 				break;
 418              		.loc 1 129 0 is_stmt 1
 419 025a 01E0     		b	.L31
 420              	.L30:
  89:../Sources/main.c **** 				break;
 421              		.loc 1 89 0
 422 025c C046     		mov	r8, r8
 423 025e 00E0     		b	.L14
 424              	.L31:
 425              		.loc 1 129 0
 426 0260 C046     		mov	r8, r8
 427              	.L14:
 130:../Sources/main.c **** 			}
 131:../Sources/main.c **** 	}
 428              		.loc 1 131 0
 429 0262 D4E6     		b	.L29
 430              	.L33:
 431              		.align	2
 432              	.L32:
 433 0264 80F00F40 		.word	1074786432
 434 0268 40F00F40 		.word	1074786368
 435 026c 00000000 		.word	TFC_Ticker
 436 0270 00F10F40 		.word	1074786560
 437 0274 00000000 		.word	LineScanImageReady
 438 0278 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 439 027c 00000000 		.word	.LC3
 440 0280 04000000 		.word	.LC5
 441 0284 00000000 		.word	LineScanImage0
 442 0288 08000000 		.word	.LC8
 443 028c 00000000 		.word	LineScanImage1
 444 0290 10000000 		.word	.LC11
 445              		.cfi_endproc
 446              	.LFE0:
 448              		.text
 449              	.Letext0:
 450              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 451              		.file 3 "C:/Users/dickw/git/orangeRun/FRDM-TFC/Project_Headers/MKL25Z4.h"
 452              		.file 4 "C:/Users/dickw/git/orangeRun/FRDM-TFC/Project_Headers/TFC\\TFC_Queue.h"
 453              		.file 5 "C:/Users/dickw/git/orangeRun/FRDM-TFC/Project_Headers/TFC\\TFC_ARM_SysTick.h"
 454              		.file 6 "C:/Users/dickw/git/orangeRun/FRDM-TFC/Project_Headers/TFC\\TFC_LineScanCamera.h"
 455              		.file 7 "C:/Users/dickw/git/orangeRun/FRDM-TFC/Project_Headers/TFC\\TFC_UART.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\dickw\AppData\Local\Temp\ccxLBx61.s:18     .rodata:00000000 $d
C:\Users\dickw\AppData\Local\Temp\ccxLBx61.s:31     .text.main:00000000 $t
C:\Users\dickw\AppData\Local\Temp\ccxLBx61.s:36     .text.main:00000000 main
C:\Users\dickw\AppData\Local\Temp\ccxLBx61.s:433    .text.main:00000264 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TFC_Init
TFC_Task
TFC_GetDIP_Switch
TFC_ReadPot
TFC_SetServo
TFC_SetBatteryLED_Level
TFC_SetMotorPWM
Qprintf
TFC_Ticker
LineScanImageReady
SDA_SERIAL_OUTGOING_QUEUE
LineScanImage0
LineScanImage1
